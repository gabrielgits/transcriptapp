// Mocks generated by Mockito 5.4.4 from annotations
// in transcriptapp/test/src/features/auth/domain/usecases/usecase_auth_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:transcriptapp/src/features/auth/domain/repositories/repository_local_auth.dart'
    as _i4;
import 'package:transcriptapp/src/features/auth/domain/repositories/repository_remote_auth.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RepositoryRemoteAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepositoryRemoteAuth extends _i1.Mock
    implements _i2.RepositoryRemoteAuth {
  @override
  _i3.Future<Map<String, dynamic>> signinWithPhone({
    required String? phone,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signinWithPhone,
          [],
          {
            #phone: phone,
            #password: password,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> signUp(Map<String, dynamic>? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [json],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> forgotPassword(String? phone) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [phone],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> updatePassword({
    required String? oldPassword,
    required String? newPassword,
    required int? studentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [],
          {
            #oldPassword: oldPassword,
            #newPassword: newPassword,
            #studentId: studentId,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> profile(int? id) => (super.noSuchMethod(
        Invocation.method(
          #profile,
          [id],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> updateProfile({
    required int? id,
    required Map<String, dynamic>? json,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #id: id,
            #json: json,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> getStudentScore(int? studentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStudentScore,
          [studentId],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);
}

/// A class which mocks [RepositoryLocalAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepositoryLocalAuth extends _i1.Mock
    implements _i4.RepositoryLocalAuth {
  @override
  _i3.Future<int> updateConfigStudent({
    required int? studentId,
    required String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateConfigStudent,
          [],
          {
            #studentId: studentId,
            #token: token,
          },
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> deleteConfigStudent() => (super.noSuchMethod(
        Invocation.method(
          #deleteConfigStudent,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}
